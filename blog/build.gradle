buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	//id 'jacoco'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

/*jacoco {
	toolVersion = '0.8.5'
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}*/

group = 'my'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'com.oracle.database.jdbc', name: 'ojdbc8', version: '21.6.0.0.1'
	implementation group: 'com.google.code.gson', name: 'gson'
	implementation group: 'org.kohsuke', name: 'github-api', version: '1.313'
	implementation group: 'org.springframework.security', name: 'spring-security-taglibs'
	implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5'
	implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client'
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	implementation group: 'org.jetbrains', name: 'annotations', version: '23.0.0'

	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
	runtimeOnly group: 'com.h2database', name: 'h2', version: '1.4.200'
	runtimeOnly 'mysql:mysql-connector-java'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testCompileOnly 'org.projectlombok:lombok' // 테스트 의존성 추가
	testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 의존성 추가
}

/*jacocoTestReport {
	reports {
		xml.enabled = false
		csv.enabled = false
		html.enabled = true
	}
}
test {
	// finalizedBy : 이(test) 작업에 대해 주어진 종료자 작업을 추가
	finalizedBy jacocoTestReport // test 작업이 끝나고 jacocoTestReport를 실행
	useJUnitPlatform()
}
jacocoTestReport {
	// dependsOn : 이 작업에 지정된 종속성을 추가
	dependsOn test // jacocoTestReport 에 test라는 종속성을 추가
	finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = true;
			element = 'CLASS'

			limit {
				counter = 'METHOD'
				value = 'COVEREDRATIO'
				minimum = 0.1
			}
		}

	}
}*/

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslDir]
		}
	}
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	querydsl.extendsFrom compileClasspath
}
